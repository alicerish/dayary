plugins {
	id 'org.springframework.boot' version '2.3.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'

}

group = 'us.spring'
version = ''
sourceCompatibility = '11'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
	compile.exclude module: 'spring-boot-starter-tomcat'
}

repositories {
	mavenCentral()
}

dependencies {
	compile project(':frontend')
	//JWT
	implementation 'com.auth0:java-jwt:3.10.3'

	//BCRYPT
	implementation 'org.mindrot:jbcrypt:0.4'

	//MARIADB
	implementation 'org.mariadb.jdbc:mariadb-java-client'

	//UNDERTOW
	implementation 'org.springframework.boot:spring-boot-starter-undertow'

	//log4jdbc-log4j2
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

	//JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

	//SPRING MVC, TOMCAT
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//LOMBOK
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//DEBUG and hot-swapping(autoreload)
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

task frontCopy(type: Copy) {
	from "${rootDir}/frontend/build/main.bundle.js"
	into "${rootDir}/backend/build/resources/main/static/."
	include '*'
}

assemble.dependsOn(frontCopy)